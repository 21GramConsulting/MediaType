import Foundation

public enum Application {
  case _1dInterleavedParityfec(Suffix? = nil, Parameters? = nil)
  case _3gpdashQoeReport(Suffix? = nil, Parameters? = nil)
  case _3gppHal(Suffix? = nil, Parameters? = nil)
  case _3gppHalForms(Suffix? = nil, Parameters? = nil)
  case _3gppIms(Suffix? = nil, Parameters? = nil)
  case A2L(Suffix? = nil, Parameters? = nil)
  case ace(Suffix? = nil, Parameters? = nil)
  case activemessage(Suffix? = nil, Parameters? = nil)
  case activity(Suffix? = nil, Parameters? = nil)
  case altoCostmap(Suffix? = nil, Parameters? = nil)
  case altoCostmapfilter(Suffix? = nil, Parameters? = nil)
  case altoDirectory(Suffix? = nil, Parameters? = nil)
  case altoEndpointprop(Suffix? = nil, Parameters? = nil)
  case altoEndpointpropparams(Suffix? = nil, Parameters? = nil)
  case altoEndpointcost(Suffix? = nil, Parameters? = nil)
  case altoEndpointcostparams(Suffix? = nil, Parameters? = nil)
  case altoError(Suffix? = nil, Parameters? = nil)
  case altoNetworkmapfilter(Suffix? = nil, Parameters? = nil)
  case altoNetworkmap(Suffix? = nil, Parameters? = nil)
  case altoUpdatestreamcontrol(Suffix? = nil, Parameters? = nil)
  case altoUpdatestreamparams(Suffix? = nil, Parameters? = nil)
  case AML(Suffix? = nil, Parameters? = nil)
  case andrewInset(Suffix? = nil, Parameters? = nil)
  case applefile(Suffix? = nil, Parameters? = nil)
  case at(Suffix? = nil, Parameters? = nil)
  case ATF(Suffix? = nil, Parameters? = nil)
  case ATFX(Suffix? = nil, Parameters? = nil)
  case atom(Suffix? = nil, Parameters? = nil)
  case atomcat(Suffix? = nil, Parameters? = nil)
  case atomdeleted(Suffix? = nil, Parameters? = nil)
  case atomicmail(Suffix? = nil, Parameters? = nil)
  case atomsvc(Suffix? = nil, Parameters? = nil)
  case atscDwd(Suffix? = nil, Parameters? = nil)
  case atscDynamicEventMessage(Suffix? = nil, Parameters? = nil)
  case atscHeld(Suffix? = nil, Parameters? = nil)
  case atscRdt(Suffix? = nil, Parameters? = nil)
  case atscRsat(Suffix? = nil, Parameters? = nil)
  case ATXML(Suffix? = nil, Parameters? = nil)
  case authPolicy(Suffix? = nil, Parameters? = nil)
  case bacnetXdd(Suffix? = nil, Parameters? = nil)
  case batchSMTP(Suffix? = nil, Parameters? = nil)
  case beep(Suffix? = nil, Parameters? = nil)
  case calendar(Suffix? = nil, Parameters? = nil)
  case callCompletion(Suffix? = nil, Parameters? = nil)
  case CALS1840(Suffix? = nil, Parameters? = nil)
  case captive(Suffix? = nil, Parameters? = nil)
  case cbor(Suffix? = nil, Parameters? = nil)
  case cborSeq(Suffix? = nil, Parameters? = nil)
  case cccex(Suffix? = nil, Parameters? = nil)
  case ccmp(Suffix? = nil, Parameters? = nil)
  case ccxml(Suffix? = nil, Parameters? = nil)
  case CDFX(Suffix? = nil, Parameters? = nil)
  case cdmiCapability(Suffix? = nil, Parameters? = nil)
  case cdmiContainer(Suffix? = nil, Parameters? = nil)
  case cdmiDomain(Suffix? = nil, Parameters? = nil)
  case cdmiObject(Suffix? = nil, Parameters? = nil)
  case cdmiQueue(Suffix? = nil, Parameters? = nil)
  case cdni(Suffix? = nil, Parameters? = nil)
  case CEA(Suffix? = nil, Parameters? = nil)
  case cea2018(Suffix? = nil, Parameters? = nil)
  case cellml(Suffix? = nil, Parameters? = nil)
  case cfw(Suffix? = nil, Parameters? = nil)
  case clr(Suffix? = nil, Parameters? = nil)
  case clue_info(Suffix? = nil, Parameters? = nil)
  case clue(Suffix? = nil, Parameters? = nil)
  case cms(Suffix? = nil, Parameters? = nil)
  case cnrp(Suffix? = nil, Parameters? = nil)
  case coapGroup(Suffix? = nil, Parameters? = nil)
  case coapPayload(Suffix? = nil, Parameters? = nil)
  case commonground(Suffix? = nil, Parameters? = nil)
  case conferenceInfo(Suffix? = nil, Parameters? = nil)
  case cpl(Suffix? = nil, Parameters? = nil)
  case cose(Suffix? = nil, Parameters? = nil)
  case coseKey(Suffix? = nil, Parameters? = nil)
  case coseKeySet(Suffix? = nil, Parameters? = nil)
  case csrattrs(Suffix? = nil, Parameters? = nil)
  case csta(Suffix? = nil, Parameters? = nil)
  case CSTAdata(Suffix? = nil, Parameters? = nil)
  case csvm(Suffix? = nil, Parameters? = nil)
  case cwt(Suffix? = nil, Parameters? = nil)
  case cybercash(Suffix? = nil, Parameters? = nil)
  case dash(Suffix? = nil, Parameters? = nil)
  case dashdelta(Suffix? = nil, Parameters? = nil)
  case davmount(Suffix? = nil, Parameters? = nil)
  case dcaRft(Suffix? = nil, Parameters? = nil)
  case DCD(Suffix? = nil, Parameters? = nil)
  case decDx(Suffix? = nil, Parameters? = nil)
  case dialogInfo(Suffix? = nil, Parameters? = nil)
  case dicom(Suffix? = nil, Parameters? = nil)
  case DII(Suffix? = nil, Parameters? = nil)
  case DIT(Suffix? = nil, Parameters? = nil)
  case dns(Suffix? = nil, Parameters? = nil)
  case dnsMessage(Suffix? = nil, Parameters? = nil)
  case dots(Suffix? = nil, Parameters? = nil)
  case dskpp(Suffix? = nil, Parameters? = nil)
  case dssc(Suffix? = nil, Parameters? = nil)
  case dvcs(Suffix? = nil, Parameters? = nil)
  case ecmascript(Suffix? = nil, Parameters? = nil)
  case EDIConsent(Suffix? = nil, Parameters? = nil)
  case EDIFACT(Suffix? = nil, Parameters? = nil)
  case EDIX12(Suffix? = nil, Parameters? = nil)
  case efi(Suffix? = nil, Parameters? = nil)
  case elm(Suffix? = nil, Parameters? = nil)
  case emma(Suffix? = nil, Parameters? = nil)
  case emotionml(Suffix? = nil, Parameters? = nil)
  case encaprtp(Suffix? = nil, Parameters? = nil)
  case epp(Suffix? = nil, Parameters? = nil)
  case epub(Suffix? = nil, Parameters? = nil)
  case eshop(Suffix? = nil, Parameters? = nil)
  case example(Suffix? = nil, Parameters? = nil)
  case exi(Suffix? = nil, Parameters? = nil)
  case expectCtReport(Suffix? = nil, Parameters? = nil)
  case express(Suffix? = nil, Parameters? = nil)
  case fastinfoset(Suffix? = nil, Parameters? = nil)
  case fastsoap(Suffix? = nil, Parameters? = nil)
  case fdt(Suffix? = nil, Parameters? = nil)
  case fhir(Suffix? = nil, Parameters? = nil)
  case fits(Suffix? = nil, Parameters? = nil)
  case flexfec(Suffix? = nil, Parameters? = nil)
  case fontSfnt(Suffix? = nil, Parameters? = nil)
  case fontTdpfr(Suffix? = nil, Parameters? = nil)
  case fontWoff(Suffix? = nil, Parameters? = nil)
  case frameworkAttributes(Suffix? = nil, Parameters? = nil)
  case geo(Suffix? = nil, Parameters? = nil)
  case geopackage(Suffix? = nil, Parameters? = nil)
  case geoxacml(Suffix? = nil, Parameters? = nil)
  case gltfBuffer(Suffix? = nil, Parameters? = nil)
  case gml(Suffix? = nil, Parameters? = nil)
  case gzip(Suffix? = nil, Parameters? = nil)
  case H224(Suffix? = nil, Parameters? = nil)
  case held(Suffix? = nil, Parameters? = nil)
  case http(Suffix? = nil, Parameters? = nil)
  case hyperstudio(Suffix? = nil, Parameters? = nil)
  case ibeKeyRequest(Suffix? = nil, Parameters? = nil)
  case ibePkgReply(Suffix? = nil, Parameters? = nil)
  case ibePpData(Suffix? = nil, Parameters? = nil)
  case iges(Suffix? = nil, Parameters? = nil)
  case imIscomposing(Suffix? = nil, Parameters? = nil)
  case index(Suffix? = nil, Parameters? = nil)
  case inkml(Suffix? = nil, Parameters? = nil)
  case IOTP(Suffix? = nil, Parameters? = nil)
  case ipfix(Suffix? = nil, Parameters? = nil)
  case ipp(Suffix? = nil, Parameters? = nil)
  case ISUP(Suffix? = nil, Parameters? = nil)
  case its(Suffix? = nil, Parameters? = nil)
  case javascript(Suffix? = nil, Parameters? = nil)
  case jf2feed(Suffix? = nil, Parameters? = nil)
  case jose(Suffix? = nil, Parameters? = nil)
  case jrd(Suffix? = nil, Parameters? = nil)
  case jscalendar(Suffix? = nil, Parameters? = nil)
  case json(Suffix? = nil, Parameters? = nil)
  case jsonPatch(Suffix? = nil, Parameters? = nil)
  case jsonSeq(Suffix? = nil, Parameters? = nil)
  case jwk(Suffix? = nil, Parameters? = nil)
  case jwkSet(Suffix? = nil, Parameters? = nil)
  case jwt(Suffix? = nil, Parameters? = nil)
  case kpmlRequest(Suffix? = nil, Parameters? = nil)
  case kpmlResponse(Suffix? = nil, Parameters? = nil)
  case ld(Suffix? = nil, Parameters? = nil)
  case lgr(Suffix? = nil, Parameters? = nil)
  case linkFormat(Suffix? = nil, Parameters? = nil)
  case loadControl(Suffix? = nil, Parameters? = nil)
  case lost(Suffix? = nil, Parameters? = nil)
  case lostsync(Suffix? = nil, Parameters? = nil)
  case lpf(Suffix? = nil, Parameters? = nil)
  case LXF(Suffix? = nil, Parameters? = nil)
  case macBinhex40(Suffix? = nil, Parameters? = nil)
  case macwriteii(Suffix? = nil, Parameters? = nil)
  case mads(Suffix? = nil, Parameters? = nil)
  case manifest(Suffix? = nil, Parameters? = nil)
  case marc(Suffix? = nil, Parameters? = nil)
  case marcxml(Suffix? = nil, Parameters? = nil)
  case mathematica(Suffix? = nil, Parameters? = nil)
  case mathml(Suffix? = nil, Parameters? = nil)
  case mathmlContent(Suffix? = nil, Parameters? = nil)
  case mathmlPresentation(Suffix? = nil, Parameters? = nil)
  case mbmsAssociatedProcedureDescription(Suffix? = nil, Parameters? = nil)
  case mbmsDeregister(Suffix? = nil, Parameters? = nil)
  case mbmsEnvelope(Suffix? = nil, Parameters? = nil)
  case mbmsMskResponse(Suffix? = nil, Parameters? = nil)
  case mbmsMsk(Suffix? = nil, Parameters? = nil)
  case mbmsProtectionDescription(Suffix? = nil, Parameters? = nil)
  case mbmsReceptionReport(Suffix? = nil, Parameters? = nil)
  case mbmsRegisterResponse(Suffix? = nil, Parameters? = nil)
  case mbmsRegister(Suffix? = nil, Parameters? = nil)
  case mbmsSchedule(Suffix? = nil, Parameters? = nil)
  case mbmsUserServiceDescription(Suffix? = nil, Parameters? = nil)
  case mbox(Suffix? = nil, Parameters? = nil)
  case media_control(Suffix? = nil, Parameters? = nil)
  case mediaPolicyDataset(Suffix? = nil, Parameters? = nil)
  case mediaservercontrol(Suffix? = nil, Parameters? = nil)
  case mergePatch(Suffix? = nil, Parameters? = nil)
  case metalink4(Suffix? = nil, Parameters? = nil)
  case mets(Suffix? = nil, Parameters? = nil)
  case MF4(Suffix? = nil, Parameters? = nil)
  case mikey(Suffix? = nil, Parameters? = nil)
  case mipc(Suffix? = nil, Parameters? = nil)
  case missingBlocks(Suffix? = nil, Parameters? = nil)
  case mmtAei(Suffix? = nil, Parameters? = nil)
  case mmtUsd(Suffix? = nil, Parameters? = nil)
  case mods(Suffix? = nil, Parameters? = nil)
  case mossKeys(Suffix? = nil, Parameters? = nil)
  case mossSignature(Suffix? = nil, Parameters? = nil)
  case mosskeyData(Suffix? = nil, Parameters? = nil)
  case mosskeyRequest(Suffix? = nil, Parameters? = nil)
  case mp21(Suffix? = nil, Parameters? = nil)
  case mp4(Suffix? = nil, Parameters? = nil)
  case mpeg4Generic(Suffix? = nil, Parameters? = nil)
  case mpeg4Iod(Suffix? = nil, Parameters? = nil)
  case mpeg4IodXmt(Suffix? = nil, Parameters? = nil)
  case mrbConsumer(Suffix? = nil, Parameters? = nil)
  case mrbPublish(Suffix? = nil, Parameters? = nil)
  case mscIvr(Suffix? = nil, Parameters? = nil)
  case mscMixer(Suffix? = nil, Parameters? = nil)
  case msword(Suffix? = nil, Parameters? = nil)
  case mud(Suffix? = nil, Parameters? = nil)
  case multipartCore(Suffix? = nil, Parameters? = nil)
  case mxf(Suffix? = nil, Parameters? = nil)
  case nQuads(Suffix? = nil, Parameters? = nil)
  case nTriples(Suffix? = nil, Parameters? = nil)
  case nasdata(Suffix? = nil, Parameters? = nil)
  case newsCheckgroups(Suffix? = nil, Parameters? = nil)
  case newsGroupinfo(Suffix? = nil, Parameters? = nil)
  case newsTransmission(Suffix? = nil, Parameters? = nil)
  case nlsml(Suffix? = nil, Parameters? = nil)
  case node(Suffix? = nil, Parameters? = nil)
  case nss(Suffix? = nil, Parameters? = nil)
  case oauthAuthzReq(Suffix? = nil, Parameters? = nil)
  case ocspRequest(Suffix? = nil, Parameters? = nil)
  case ocspResponse(Suffix? = nil, Parameters? = nil)
  case octetStream(Suffix? = nil, Parameters? = nil)
  case ODA(Suffix? = nil, Parameters? = nil)
  case odm(Suffix? = nil, Parameters? = nil)
  case ODX(Suffix? = nil, Parameters? = nil)
  case oebpsPackage(Suffix? = nil, Parameters? = nil)
  case ogg(Suffix? = nil, Parameters? = nil)
  case opcNodeset(Suffix? = nil, Parameters? = nil)
  case oscore(Suffix? = nil, Parameters? = nil)
  case oxps(Suffix? = nil, Parameters? = nil)
  case p21(Suffix? = nil, Parameters? = nil)
  case p2pOverlay(Suffix? = nil, Parameters? = nil)
  case parityfec(Suffix? = nil, Parameters? = nil)
  case passport(Suffix? = nil, Parameters? = nil)
  case patchOpsError(Suffix? = nil, Parameters? = nil)
  case pdf(Suffix? = nil, Parameters? = nil)
  case PDX(Suffix? = nil, Parameters? = nil)
  case pemCertificateChain(Suffix? = nil, Parameters? = nil)
  case pgpEncrypted(Suffix? = nil, Parameters? = nil)
  case pgpKeys(Suffix? = nil, Parameters? = nil)
  case pgpSignature(Suffix? = nil, Parameters? = nil)
  case pidfDiff(Suffix? = nil, Parameters? = nil)
  case pidf(Suffix? = nil, Parameters? = nil)
  case pkcs10(Suffix? = nil, Parameters? = nil)
  case pkcs7Mime(Suffix? = nil, Parameters? = nil)
  case pkcs7Signature(Suffix? = nil, Parameters? = nil)
  case pkcs8(Suffix? = nil, Parameters? = nil)
  case pkcs8Encrypted(Suffix? = nil, Parameters? = nil)
  case pkcs12(Suffix? = nil, Parameters? = nil)
  case pkixAttrCert(Suffix? = nil, Parameters? = nil)
  case pkixCert(Suffix? = nil, Parameters? = nil)
  case pkixCrl(Suffix? = nil, Parameters? = nil)
  case pkixPkipath(Suffix? = nil, Parameters? = nil)
  case pkixcmp(Suffix? = nil, Parameters? = nil)
  case pls(Suffix? = nil, Parameters? = nil)
  case pocSettings(Suffix? = nil, Parameters? = nil)
  case postscript(Suffix? = nil, Parameters? = nil)
  case ppspTracker(Suffix? = nil, Parameters? = nil)
  case problem(Suffix? = nil, Parameters? = nil)
  case provenance(Suffix? = nil, Parameters? = nil)
  case pskc(Suffix? = nil, Parameters? = nil)
  case pvd(Suffix? = nil, Parameters? = nil)
  case rdf(Suffix? = nil, Parameters? = nil)
  case routeApd(Suffix? = nil, Parameters? = nil)
  case routeSTsid(Suffix? = nil, Parameters? = nil)
  case routeUsd(Suffix? = nil, Parameters? = nil)
  case QSIG(Suffix? = nil, Parameters? = nil)
  case raptorfec(Suffix? = nil, Parameters? = nil)
  case rdap(Suffix? = nil, Parameters? = nil)
  case reginfo(Suffix? = nil, Parameters? = nil)
  case relaxNgCompactSyntax(Suffix? = nil, Parameters? = nil)
  case remotePrinting(Suffix? = nil, Parameters? = nil)
  case reputon(Suffix? = nil, Parameters? = nil)
  case resourceListsDiff(Suffix? = nil, Parameters? = nil)
  case resourceLists(Suffix? = nil, Parameters? = nil)
  case rfc(Suffix? = nil, Parameters? = nil)
  case riscos(Suffix? = nil, Parameters? = nil)
  case rlmi(Suffix? = nil, Parameters? = nil)
  case rlsServices(Suffix? = nil, Parameters? = nil)
  case rpkiGhostbusters(Suffix? = nil, Parameters? = nil)
  case rpkiManifest(Suffix? = nil, Parameters? = nil)
  case rpkiPublication(Suffix? = nil, Parameters? = nil)
  case rpkiRoa(Suffix? = nil, Parameters? = nil)
  case rpkiUpdown(Suffix? = nil, Parameters? = nil)
  case rtf(Suffix? = nil, Parameters? = nil)
  case rtploopback(Suffix? = nil, Parameters? = nil)
  case rtx(Suffix? = nil, Parameters? = nil)
  case samlassertion(Suffix? = nil, Parameters? = nil)
  case samlmetadata(Suffix? = nil, Parameters? = nil)
  case sarifExternalProperties(Suffix? = nil, Parameters? = nil)
  case sarif(Suffix? = nil, Parameters? = nil)
  case sbe(Suffix? = nil, Parameters? = nil)
  case sbml(Suffix? = nil, Parameters? = nil)
  case scaip(Suffix? = nil, Parameters? = nil)
  case scim(Suffix? = nil, Parameters? = nil)
  case scvpCvRequest(Suffix? = nil, Parameters? = nil)
  case scvpCvResponse(Suffix? = nil, Parameters? = nil)
  case scvpVpRequest(Suffix? = nil, Parameters? = nil)
  case scvpVpResponse(Suffix? = nil, Parameters? = nil)
  case sdp(Suffix? = nil, Parameters? = nil)
  case secevent(Suffix? = nil, Parameters? = nil)
  case senmlEtch(Suffix? = nil, Parameters? = nil)
  case senmlExi(Suffix? = nil, Parameters? = nil)
  case senml(Suffix? = nil, Parameters? = nil)
  case sensmlExi(Suffix? = nil, Parameters? = nil)
  case sensml(Suffix? = nil, Parameters? = nil)
  case sepExi(Suffix? = nil, Parameters? = nil)
  case sep(Suffix? = nil, Parameters? = nil)
  case sessionInfo(Suffix? = nil, Parameters? = nil)
  case setPayment(Suffix? = nil, Parameters? = nil)
  case setPaymentInitiation(Suffix? = nil, Parameters? = nil)
  case setRegistration(Suffix? = nil, Parameters? = nil)
  case setRegistrationInitiation(Suffix? = nil, Parameters? = nil)
  case SGML(Suffix? = nil, Parameters? = nil)
  case sgmlOpenCatalog(Suffix? = nil, Parameters? = nil)
  case shf(Suffix? = nil, Parameters? = nil)
  case sieve(Suffix? = nil, Parameters? = nil)
  case simpleFilter(Suffix? = nil, Parameters? = nil)
  case simpleMessageSummary(Suffix? = nil, Parameters? = nil)
  case simpleSymbolContainer(Suffix? = nil, Parameters? = nil)
  case sipc(Suffix? = nil, Parameters? = nil)
  case slate(Suffix? = nil, Parameters? = nil)
  case smil(Suffix? = nil, Parameters? = nil)
  case smpte336m(Suffix? = nil, Parameters? = nil)
  case soap(Suffix? = nil, Parameters? = nil)
  case sparqlQuery(Suffix? = nil, Parameters? = nil)
  case sparqlResults(Suffix? = nil, Parameters? = nil)
  case spiritsEvent(Suffix? = nil, Parameters? = nil)
  case sql(Suffix? = nil, Parameters? = nil)
  case srgs(Suffix? = nil, Parameters? = nil)
  case sru(Suffix? = nil, Parameters? = nil)
  case ssml(Suffix? = nil, Parameters? = nil)
  case stix(Suffix? = nil, Parameters? = nil)
  case swid(Suffix? = nil, Parameters? = nil)
  case tampApexUpdate(Suffix? = nil, Parameters? = nil)
  case tampApexUpdateConfirm(Suffix? = nil, Parameters? = nil)
  case tampCommunityUpdate(Suffix? = nil, Parameters? = nil)
  case tampCommunityUpdateConfirm(Suffix? = nil, Parameters? = nil)
  case tampError(Suffix? = nil, Parameters? = nil)
  case tampSequenceAdjust(Suffix? = nil, Parameters? = nil)
  case tampSequenceAdjustConfirm(Suffix? = nil, Parameters? = nil)
  case tampStatusQuery(Suffix? = nil, Parameters? = nil)
  case tampStatusResponse(Suffix? = nil, Parameters? = nil)
  case tampUpdate(Suffix? = nil, Parameters? = nil)
  case tampUpdateConfirm(Suffix? = nil, Parameters? = nil)
  case taxii(Suffix? = nil, Parameters? = nil)
  case td(Suffix? = nil, Parameters? = nil)
  case tei(Suffix? = nil, Parameters? = nil)
  case TETRA_ISI(Suffix? = nil, Parameters? = nil)
  case thraud(Suffix? = nil, Parameters? = nil)
  case timestampQuery(Suffix? = nil, Parameters? = nil)
  case timestampReply(Suffix? = nil, Parameters? = nil)
  case timestampedData(Suffix? = nil, Parameters? = nil)
  case tlsrpt(Suffix? = nil, Parameters? = nil)
  case tnauthlist(Suffix? = nil, Parameters? = nil)
  case tokenIntrospection(Suffix? = nil, Parameters? = nil)
  case trickleIceSdpfrag(Suffix? = nil, Parameters? = nil)
  case trig(Suffix? = nil, Parameters? = nil)
  case ttml(Suffix? = nil, Parameters? = nil)
  case tveTrigger(Suffix? = nil, Parameters? = nil)
  case tzif(Suffix? = nil, Parameters? = nil)
  case tzifLeap(Suffix? = nil, Parameters? = nil)
  case ulpfec(Suffix? = nil, Parameters? = nil)
  case urcGrpsheet(Suffix? = nil, Parameters? = nil)
  case urcRessheet(Suffix? = nil, Parameters? = nil)
  case urcTargetdesc(Suffix? = nil, Parameters? = nil)
  case urcUisocketdesc(Suffix? = nil, Parameters? = nil)
  case vcard(Suffix? = nil, Parameters? = nil)
  case vemmi(Suffix? = nil, Parameters? = nil)
  case voicexml(Suffix? = nil, Parameters? = nil)
  case voucherCms(Suffix? = nil, Parameters? = nil)
  case vqRtcpxr(Suffix? = nil, Parameters? = nil)
  case wasm(Suffix? = nil, Parameters? = nil)
  case watcherinfo(Suffix? = nil, Parameters? = nil)
  case webpushOptions(Suffix? = nil, Parameters? = nil)
  case whoisppQuery(Suffix? = nil, Parameters? = nil)
  case whoisppResponse(Suffix? = nil, Parameters? = nil)
  case widget(Suffix? = nil, Parameters? = nil)
  case wita(Suffix? = nil, Parameters? = nil)
  case wsdl(Suffix? = nil, Parameters? = nil)
  case wspolicy(Suffix? = nil, Parameters? = nil)
  case xPkiMessage(Suffix? = nil, Parameters? = nil)
  case xWwwFormUrlencoded(Suffix? = nil, Parameters? = nil)
  case xX509CaCert(Suffix? = nil, Parameters? = nil)
  case xX509CaRaCert(Suffix? = nil, Parameters? = nil)
  case xX509NextCaCert(Suffix? = nil, Parameters? = nil)
  case x400Bp(Suffix? = nil, Parameters? = nil)
  case xacml(Suffix? = nil, Parameters? = nil)
  case xcapAtt(Suffix? = nil, Parameters? = nil)
  case xcapCaps(Suffix? = nil, Parameters? = nil)
  case xcapDiff(Suffix? = nil, Parameters? = nil)
  case xcapEl(Suffix? = nil, Parameters? = nil)
  case xcapError(Suffix? = nil, Parameters? = nil)
  case xcapNs(Suffix? = nil, Parameters? = nil)
  case xconConferenceInfoDiff(Suffix? = nil, Parameters? = nil)
  case xconConferenceInfo(Suffix? = nil, Parameters? = nil)
  case xenc(Suffix? = nil, Parameters? = nil)
  case xhtml(Suffix? = nil, Parameters? = nil)
  case xliff(Suffix? = nil, Parameters? = nil)
  case xml(Suffix? = nil, Parameters? = nil)
  case xmlDtd(Suffix? = nil, Parameters? = nil)
  case xmlExternalParsedEntity(Suffix? = nil, Parameters? = nil)
  case xmlPatch(Suffix? = nil, Parameters? = nil)
  case xmpp(Suffix? = nil, Parameters? = nil)
  case xop(Suffix? = nil, Parameters? = nil)
  case xslt(Suffix? = nil, Parameters? = nil)
  case xv(Suffix? = nil, Parameters? = nil)
  case yang(Suffix? = nil, Parameters? = nil)
  case yangData(Suffix? = nil, Parameters? = nil)
  case yangPatch(Suffix? = nil, Parameters? = nil)
  case yin(Suffix? = nil, Parameters? = nil)
  case zip(Suffix? = nil, Parameters? = nil)
  case zlib(Suffix? = nil, Parameters? = nil)
  case zstd(Suffix? = nil, Parameters? = nil)
  case other(String, Suffix? = nil, Parameters? = nil)
  case anything(Suffix? = nil, Parameters? = nil)
}

extension Application: CustomStringConvertible { 
  public var description: String {
    switch self {
    case ._1dInterleavedParityfec(let suffix, let parameters):            return "1d-interleaved-parityfec\(suffix)\(parameters)"
    case ._3gpdashQoeReport(let suffix, let parameters):                  return "3gpdash-qoe-report\(suffix)\(parameters)"
    case ._3gppHal(let suffix, let parameters):                           return "3gppHal\(suffix)\(parameters)"
    case ._3gppHalForms(let suffix, let parameters):                      return "3gppHalForms\(suffix)\(parameters)"
    case ._3gppIms(let suffix, let parameters):                           return "3gpp-ims\(suffix)\(parameters)"
    case .A2L(let suffix, let parameters):                                return "A2L\(suffix)\(parameters)"
    case .ace(let suffix, let parameters):                                return "ace\(suffix)\(parameters)"
    case .activemessage(let suffix, let parameters):                      return "activemessage\(suffix)\(parameters)"
    case .activity(let suffix, let parameters):                           return "activity\(suffix)\(parameters)"
    case .altoCostmap(let suffix, let parameters):                        return "alto-costmap\(suffix)\(parameters)"
    case .altoCostmapfilter(let suffix, let parameters):                  return "alto-costmapfilter\(suffix)\(parameters)"
    case .altoDirectory(let suffix, let parameters):                      return "alto-directory\(suffix)\(parameters)"
    case .altoEndpointprop(let suffix, let parameters):                   return "alto-endpointprop\(suffix)\(parameters)"
    case .altoEndpointpropparams(let suffix, let parameters):             return "alto-endpointpropparams\(suffix)\(parameters)"
    case .altoEndpointcost(let suffix, let parameters):                   return "alto-endpointcost\(suffix)\(parameters)"
    case .altoEndpointcostparams(let suffix, let parameters):             return "alto-endpointcostparams\(suffix)\(parameters)"
    case .altoError(let suffix, let parameters):                          return "alto-error\(suffix)\(parameters)"
    case .altoNetworkmapfilter(let suffix, let parameters):               return "alto-networkmapfilter\(suffix)\(parameters)"
    case .altoNetworkmap(let suffix, let parameters):                     return "alto-networkmap\(suffix)\(parameters)"
    case .altoUpdatestreamcontrol(let suffix, let parameters):            return "alto-updatestreamcontrol\(suffix)\(parameters)"
    case .altoUpdatestreamparams(let suffix, let parameters):             return "alto-updatestreamparams\(suffix)\(parameters)"
    case .AML(let suffix, let parameters):                                return "AML\(suffix)\(parameters)"
    case .andrewInset(let suffix, let parameters):                        return "andrew-inset\(suffix)\(parameters)"
    case .applefile(let suffix, let parameters):                          return "applefile\(suffix)\(parameters)"
    case .at(let suffix, let parameters):                                 return "at\(suffix)\(parameters)"
    case .ATF(let suffix, let parameters):                                return "ATF\(suffix)\(parameters)"
    case .ATFX(let suffix, let parameters):                               return "ATFX\(suffix)\(parameters)"
    case .atom(let suffix, let parameters):                               return "atom\(suffix)\(parameters)"
    case .atomcat(let suffix, let parameters):                            return "atomcat\(suffix)\(parameters)"
    case .atomdeleted(let suffix, let parameters):                        return "atomdeleted\(suffix)\(parameters)"
    case .atomicmail(let suffix, let parameters):                         return "atomicmail\(suffix)\(parameters)"
    case .atomsvc(let suffix, let parameters):                            return "atomsvc\(suffix)\(parameters)"
    case .atscDwd(let suffix, let parameters):                            return "atsc-dwd\(suffix)\(parameters)"
    case .atscDynamicEventMessage(let suffix, let parameters):            return "atsc-dynamic-event-message\(suffix)\(parameters)"
    case .atscHeld(let suffix, let parameters):                           return "atsc-held\(suffix)\(parameters)"
    case .atscRdt(let suffix, let parameters):                            return "atsc-rdt\(suffix)\(parameters)"
    case .atscRsat(let suffix, let parameters):                           return "atsc-rsat\(suffix)\(parameters)"
    case .ATXML(let suffix, let parameters):                              return "ATXML\(suffix)\(parameters)"
    case .authPolicy(let suffix, let parameters):                         return "auth-policy\(suffix)\(parameters)"
    case .bacnetXdd(let suffix, let parameters):                          return "bacnet-xdd\(suffix)\(parameters)"
    case .batchSMTP(let suffix, let parameters):                          return "batch-SMTP\(suffix)\(parameters)"
    case .beep(let suffix, let parameters):                               return "beep\(suffix)\(parameters)"
    case .calendar(let suffix, let parameters):                           return "calendar\(suffix)\(parameters)"
    case .callCompletion(let suffix, let parameters):                     return "call-completion\(suffix)\(parameters)"
    case .CALS1840(let suffix, let parameters):                           return "CALS-1840\(suffix)\(parameters)"
    case .captive(let suffix, let parameters):                            return "captive\(suffix)\(parameters)"
    case .cbor(let suffix, let parameters):                               return "cbor\(suffix)\(parameters)"
    case .cborSeq(let suffix, let parameters):                            return "cbor-seq\(suffix)\(parameters)"
    case .cccex(let suffix, let parameters):                              return "cccex\(suffix)\(parameters)"
    case .ccmp(let suffix, let parameters):                               return "ccmp\(suffix)\(parameters)"
    case .ccxml(let suffix, let parameters):                              return "ccxml\(suffix)\(parameters)"
    case .CDFX(let suffix, let parameters):                               return "CDFX\(suffix)\(parameters)"
    case .cdmiCapability(let suffix, let parameters):                     return "cdmi-capability\(suffix)\(parameters)"
    case .cdmiContainer(let suffix, let parameters):                      return "cdmi-container\(suffix)\(parameters)"
    case .cdmiDomain(let suffix, let parameters):                         return "cdmi-domain\(suffix)\(parameters)"
    case .cdmiObject(let suffix, let parameters):                         return "cdmi-object\(suffix)\(parameters)"
    case .cdmiQueue(let suffix, let parameters):                          return "cdmi-queue\(suffix)\(parameters)"
    case .cdni(let suffix, let parameters):                               return "cdni\(suffix)\(parameters)"
    case .CEA(let suffix, let parameters):                                return "CEA\(suffix)\(parameters)"
    case .cea2018(let suffix, let parameters):                            return "cea-2018\(suffix)\(parameters)"
    case .cellml(let suffix, let parameters):                             return "cellml\(suffix)\(parameters)"
    case .cfw(let suffix, let parameters):                                return "cfw\(suffix)\(parameters)"
    case .clr(let suffix, let parameters):                                return "clr\(suffix)\(parameters)"
    case .clue_info(let suffix, let parameters):                          return "clue_info\(suffix)\(parameters)"
    case .clue(let suffix, let parameters):                               return "clue\(suffix)\(parameters)"
    case .cms(let suffix, let parameters):                                return "cms\(suffix)\(parameters)"
    case .cnrp(let suffix, let parameters):                               return "cnrp\(suffix)\(parameters)"
    case .coapGroup(let suffix, let parameters):                          return "coap-group\(suffix)\(parameters)"
    case .coapPayload(let suffix, let parameters):                        return "coap-payload\(suffix)\(parameters)"
    case .commonground(let suffix, let parameters):                       return "commonground\(suffix)\(parameters)"
    case .conferenceInfo(let suffix, let parameters):                     return "conference-info\(suffix)\(parameters)"
    case .cpl(let suffix, let parameters):                                return "cpl\(suffix)\(parameters)"
    case .cose(let suffix, let parameters):                               return "cose\(suffix)\(parameters)"
    case .coseKey(let suffix, let parameters):                            return "cose-key\(suffix)\(parameters)"
    case .coseKeySet(let suffix, let parameters):                         return "cose-key-set\(suffix)\(parameters)"
    case .csrattrs(let suffix, let parameters):                           return "csrattrs\(suffix)\(parameters)"
    case .csta(let suffix, let parameters):                               return "csta\(suffix)\(parameters)"
    case .CSTAdata(let suffix, let parameters):                           return "CSTAdata\(suffix)\(parameters)"
    case .csvm(let suffix, let parameters):                               return "csvm\(suffix)\(parameters)"
    case .cwt(let suffix, let parameters):                                return "cwt\(suffix)\(parameters)"
    case .cybercash(let suffix, let parameters):                          return "cybercash\(suffix)\(parameters)"
    case .dash(let suffix, let parameters):                               return "dash\(suffix)\(parameters)"
    case .dashdelta(let suffix, let parameters):                          return "dashdelta\(suffix)\(parameters)"
    case .davmount(let suffix, let parameters):                           return "davmount\(suffix)\(parameters)"
    case .dcaRft(let suffix, let parameters):                             return "dca-rft\(suffix)\(parameters)"
    case .DCD(let suffix, let parameters):                                return "DCD\(suffix)\(parameters)"
    case .decDx(let suffix, let parameters):                              return "dec-dx\(suffix)\(parameters)"
    case .dialogInfo(let suffix, let parameters):                         return "dialog-info\(suffix)\(parameters)"
    case .dicom(let suffix, let parameters):                              return "dicom\(suffix)\(parameters)"
    case .DII(let suffix, let parameters):                                return "DII\(suffix)\(parameters)"
    case .DIT(let suffix, let parameters):                                return "DIT\(suffix)\(parameters)"
    case .dns(let suffix, let parameters):                                return "dns\(suffix)\(parameters)"
    case .dnsMessage(let suffix, let parameters):                         return "dns-message\(suffix)\(parameters)"
    case .dots(let suffix, let parameters):                               return "dots\(suffix)\(parameters)"
    case .dskpp(let suffix, let parameters):                              return "dskpp\(suffix)\(parameters)"
    case .dssc(let suffix, let parameters):                               return "dssc\(suffix)\(parameters)"
    case .dvcs(let suffix, let parameters):                               return "dvcs\(suffix)\(parameters)"
    case .ecmascript(let suffix, let parameters):                         return "ecmascript\(suffix)\(parameters)"
    case .EDIConsent(let suffix, let parameters):                         return "EDI-consent\(suffix)\(parameters)"
    case .EDIFACT(let suffix, let parameters):                            return "EDIFACT\(suffix)\(parameters)"
    case .EDIX12(let suffix, let parameters):                             return "EDI-X12\(suffix)\(parameters)"
    case .efi(let suffix, let parameters):                                return "efi\(suffix)\(parameters)"
    case .elm(let suffix, let parameters):                                return "elm\(suffix)\(parameters)"
    case .emma(let suffix, let parameters):                               return "emma\(suffix)\(parameters)"
    case .emotionml(let suffix, let parameters):                          return "emotionml\(suffix)\(parameters)"
    case .encaprtp(let suffix, let parameters):                           return "encaprtp\(suffix)\(parameters)"
    case .epp(let suffix, let parameters):                                return "epp\(suffix)\(parameters)"
    case .epub(let suffix, let parameters):                               return "epub\(suffix)\(parameters)"
    case .eshop(let suffix, let parameters):                              return "eshop\(suffix)\(parameters)"
    case .example(let suffix, let parameters):                            return "example\(suffix)\(parameters)"
    case .exi(let suffix, let parameters):                                return "exi\(suffix)\(parameters)"
    case .expectCtReport(let suffix, let parameters):                     return "expect-ct-report\(suffix)\(parameters)"
    case .express(let suffix, let parameters):                            return "express\(suffix)\(parameters)"
    case .fastinfoset(let suffix, let parameters):                        return "fastinfoset\(suffix)\(parameters)"
    case .fastsoap(let suffix, let parameters):                           return "fastsoap\(suffix)\(parameters)"
    case .fdt(let suffix, let parameters):                                return "fdt\(suffix)\(parameters)"
    case .fhir(let suffix, let parameters):                               return "fhir\(suffix)\(parameters)"
    case .fits(let suffix, let parameters):                               return "fits\(suffix)\(parameters)"
    case .flexfec(let suffix, let parameters):                            return "flexfec\(suffix)\(parameters)"
    case .fontSfnt(let suffix, let parameters):                           return "font-sfnt\(suffix)\(parameters)"
    case .fontTdpfr(let suffix, let parameters):                          return "font-tdpfr\(suffix)\(parameters)"
    case .fontWoff(let suffix, let parameters):                           return "font-woff\(suffix)\(parameters)"
    case .frameworkAttributes(let suffix, let parameters):                return "framework-attributes\(suffix)\(parameters)"
    case .geo(let suffix, let parameters):                                return "geo\(suffix)\(parameters)"
    case .geopackage(let suffix, let parameters):                         return "geopackage\(suffix)\(parameters)"
    case .geoxacml(let suffix, let parameters):                           return "geoxacml\(suffix)\(parameters)"
    case .gltfBuffer(let suffix, let parameters):                         return "gltf-buffer\(suffix)\(parameters)"
    case .gml(let suffix, let parameters):                                return "gml\(suffix)\(parameters)"
    case .gzip(let suffix, let parameters):                               return "gzip\(suffix)\(parameters)"
    case .H224(let suffix, let parameters):                               return "H224\(suffix)\(parameters)"
    case .held(let suffix, let parameters):                               return "held\(suffix)\(parameters)"
    case .http(let suffix, let parameters):                               return "http\(suffix)\(parameters)"
    case .hyperstudio(let suffix, let parameters):                        return "hyperstudio\(suffix)\(parameters)"
    case .ibeKeyRequest(let suffix, let parameters):                      return "ibe-key-request\(suffix)\(parameters)"
    case .ibePkgReply(let suffix, let parameters):                        return "ibe-pkg-reply\(suffix)\(parameters)"
    case .ibePpData(let suffix, let parameters):                          return "ibe-pp-data\(suffix)\(parameters)"
    case .iges(let suffix, let parameters):                               return "iges\(suffix)\(parameters)"
    case .imIscomposing(let suffix, let parameters):                      return "im-iscomposing\(suffix)\(parameters)"
    case .index(let suffix, let parameters):                              return "index\(suffix)\(parameters)"
    case .inkml(let suffix, let parameters):                              return "inkml\(suffix)\(parameters)"
    case .IOTP(let suffix, let parameters):                               return "IOTP\(suffix)\(parameters)"
    case .ipfix(let suffix, let parameters):                              return "ipfix\(suffix)\(parameters)"
    case .ipp(let suffix, let parameters):                                return "ipp\(suffix)\(parameters)"
    case .ISUP(let suffix, let parameters):                               return "ISUP\(suffix)\(parameters)"
    case .its(let suffix, let parameters):                                return "its\(suffix)\(parameters)"
    case .javascript(let suffix, let parameters):                         return "javascript\(suffix)\(parameters)"
    case .jf2feed(let suffix, let parameters):                            return "jf2feed\(suffix)\(parameters)"
    case .jose(let suffix, let parameters):                               return "jose\(suffix)\(parameters)"
    case .jrd(let suffix, let parameters):                                return "jrd\(suffix)\(parameters)"
    case .jscalendar(let suffix, let parameters):                         return "jscalendar\(suffix)\(parameters)"
    case .json(let suffix, let parameters):                               return "json\(suffix)\(parameters)"
    case .jsonPatch(let suffix, let parameters):                          return "json-patch\(suffix)\(parameters)"
    case .jsonSeq(let suffix, let parameters):                            return "json-seq\(suffix)\(parameters)"
    case .jwk(let suffix, let parameters):                                return "jwk\(suffix)\(parameters)"
    case .jwkSet(let suffix, let parameters):                             return "jwk-set\(suffix)\(parameters)"
    case .jwt(let suffix, let parameters):                                return "jwt\(suffix)\(parameters)"
    case .kpmlRequest(let suffix, let parameters):                        return "kpml-request\(suffix)\(parameters)"
    case .kpmlResponse(let suffix, let parameters):                       return "kpml-response\(suffix)\(parameters)"
    case .ld(let suffix, let parameters):                                 return "ld\(suffix)\(parameters)"
    case .lgr(let suffix, let parameters):                                return "lgr\(suffix)\(parameters)"
    case .linkFormat(let suffix, let parameters):                         return "link-format\(suffix)\(parameters)"
    case .loadControl(let suffix, let parameters):                        return "load-control\(suffix)\(parameters)"
    case .lost(let suffix, let parameters):                               return "lost\(suffix)\(parameters)"
    case .lostsync(let suffix, let parameters):                           return "lostsync\(suffix)\(parameters)"
    case .lpf(let suffix, let parameters):                                return "lpf\(suffix)\(parameters)"
    case .LXF(let suffix, let parameters):                                return "LXF\(suffix)\(parameters)"
    case .macBinhex40(let suffix, let parameters):                        return "mac-binhex40\(suffix)\(parameters)"
    case .macwriteii(let suffix, let parameters):                         return "macwriteii\(suffix)\(parameters)"
    case .mads(let suffix, let parameters):                               return "mads\(suffix)\(parameters)"
    case .manifest(let suffix, let parameters):                           return "manifest\(suffix)\(parameters)"
    case .marc(let suffix, let parameters):                               return "marc\(suffix)\(parameters)"
    case .marcxml(let suffix, let parameters):                            return "marcxml\(suffix)\(parameters)"
    case .mathematica(let suffix, let parameters):                        return "mathematica\(suffix)\(parameters)"
    case .mathml(let suffix, let parameters):                             return "mathml\(suffix)\(parameters)"
    case .mathmlContent(let suffix, let parameters):                      return "mathml-content\(suffix)\(parameters)"
    case .mathmlPresentation(let suffix, let parameters):                 return "mathml-presentation\(suffix)\(parameters)"
    case .mbmsAssociatedProcedureDescription(let suffix, let parameters): return "mbms-associated-procedure-description\(suffix)\(parameters)"
    case .mbmsDeregister(let suffix, let parameters):                     return "mbms-deregister\(suffix)\(parameters)"
    case .mbmsEnvelope(let suffix, let parameters):                       return "mbms-envelope\(suffix)\(parameters)"
    case .mbmsMskResponse(let suffix, let parameters):                    return "mbms-msk-response\(suffix)\(parameters)"
    case .mbmsMsk(let suffix, let parameters):                            return "mbms-msk\(suffix)\(parameters)"
    case .mbmsProtectionDescription(let suffix, let parameters):          return "mbms-protection-description\(suffix)\(parameters)"
    case .mbmsReceptionReport(let suffix, let parameters):                return "mbms-reception-report\(suffix)\(parameters)"
    case .mbmsRegisterResponse(let suffix, let parameters):               return "mbms-register-response\(suffix)\(parameters)"
    case .mbmsRegister(let suffix, let parameters):                       return "mbms-register\(suffix)\(parameters)"
    case .mbmsSchedule(let suffix, let parameters):                       return "mbms-schedule\(suffix)\(parameters)"
    case .mbmsUserServiceDescription(let suffix, let parameters):         return "mbms-user-service-description\(suffix)\(parameters)"
    case .mbox(let suffix, let parameters):                               return "mbox\(suffix)\(parameters)"
    case .media_control(let suffix, let parameters):                      return "media_control\(suffix)\(parameters)"
    case .mediaPolicyDataset(let suffix, let parameters):                 return "media-policy-dataset\(suffix)\(parameters)"
    case .mediaservercontrol(let suffix, let parameters):                 return "mediaservercontrol\(suffix)\(parameters)"
    case .mergePatch(let suffix, let parameters):                         return "merge-patch\(suffix)\(parameters)"
    case .metalink4(let suffix, let parameters):                          return "metalink4\(suffix)\(parameters)"
    case .mets(let suffix, let parameters):                               return "mets\(suffix)\(parameters)"
    case .MF4(let suffix, let parameters):                                return "MF4\(suffix)\(parameters)"
    case .mikey(let suffix, let parameters):                              return "mikey\(suffix)\(parameters)"
    case .mipc(let suffix, let parameters):                               return "mipc\(suffix)\(parameters)"
    case .missingBlocks(let suffix, let parameters):                      return "missing-blocks\(suffix)\(parameters)"
    case .mmtAei(let suffix, let parameters):                             return "mmt-aei\(suffix)\(parameters)"
    case .mmtUsd(let suffix, let parameters):                             return "mmt-usd\(suffix)\(parameters)"
    case .mods(let suffix, let parameters):                               return "mods\(suffix)\(parameters)"
    case .mossKeys(let suffix, let parameters):                           return "moss-keys\(suffix)\(parameters)"
    case .mossSignature(let suffix, let parameters):                      return "moss-signature\(suffix)\(parameters)"
    case .mosskeyData(let suffix, let parameters):                        return "mosskey-data\(suffix)\(parameters)"
    case .mosskeyRequest(let suffix, let parameters):                     return "mosskey-request\(suffix)\(parameters)"
    case .mp21(let suffix, let parameters):                               return "mp21\(suffix)\(parameters)"
    case .mp4(let suffix, let parameters):                                return "mp4\(suffix)\(parameters)"
    case .mpeg4Generic(let suffix, let parameters):                       return "mpeg4-generic\(suffix)\(parameters)"
    case .mpeg4Iod(let suffix, let parameters):                           return "mpeg4-iod\(suffix)\(parameters)"
    case .mpeg4IodXmt(let suffix, let parameters):                        return "mpeg4-iod-xmt\(suffix)\(parameters)"
    case .mrbConsumer(let suffix, let parameters):                        return "mrb-consumer\(suffix)\(parameters)"
    case .mrbPublish(let suffix, let parameters):                         return "mrb-publish\(suffix)\(parameters)"
    case .mscIvr(let suffix, let parameters):                             return "msc-ivr\(suffix)\(parameters)"
    case .mscMixer(let suffix, let parameters):                           return "msc-mixer\(suffix)\(parameters)"
    case .msword(let suffix, let parameters):                             return "msword\(suffix)\(parameters)"
    case .mud(let suffix, let parameters):                                return "mud\(suffix)\(parameters)"
    case .multipartCore(let suffix, let parameters):                      return "multipart-core\(suffix)\(parameters)"
    case .mxf(let suffix, let parameters):                                return "mxf\(suffix)\(parameters)"
    case .nQuads(let suffix, let parameters):                             return "n-quads\(suffix)\(parameters)"
    case .nTriples(let suffix, let parameters):                           return "n-triples\(suffix)\(parameters)"
    case .nasdata(let suffix, let parameters):                            return "nasdata\(suffix)\(parameters)"
    case .newsCheckgroups(let suffix, let parameters):                    return "news-checkgroups\(suffix)\(parameters)"
    case .newsGroupinfo(let suffix, let parameters):                      return "news-groupinfo\(suffix)\(parameters)"
    case .newsTransmission(let suffix, let parameters):                   return "news-transmission\(suffix)\(parameters)"
    case .nlsml(let suffix, let parameters):                              return "nlsml\(suffix)\(parameters)"
    case .node(let suffix, let parameters):                               return "node\(suffix)\(parameters)"
    case .nss(let suffix, let parameters):                                return "nss\(suffix)\(parameters)"
    case .oauthAuthzReq(let suffix, let parameters):                      return "oauth-authz-req\(suffix)\(parameters)"
    case .ocspRequest(let suffix, let parameters):                        return "ocsp-request\(suffix)\(parameters)"
    case .ocspResponse(let suffix, let parameters):                       return "ocsp-response\(suffix)\(parameters)"
    case .octetStream(let suffix, let parameters):                        return "octet-stream\(suffix)\(parameters)"
    case .ODA(let suffix, let parameters):                                return "ODA\(suffix)\(parameters)"
    case .odm(let suffix, let parameters):                                return "odm\(suffix)\(parameters)"
    case .ODX(let suffix, let parameters):                                return "ODX\(suffix)\(parameters)"
    case .oebpsPackage(let suffix, let parameters):                       return "oebps-package\(suffix)\(parameters)"
    case .ogg(let suffix, let parameters):                                return "ogg\(suffix)\(parameters)"
    case .opcNodeset(let suffix, let parameters):                         return "opc-nodeset\(suffix)\(parameters)"
    case .oscore(let suffix, let parameters):                             return "oscore\(suffix)\(parameters)"
    case .oxps(let suffix, let parameters):                               return "oxps\(suffix)\(parameters)"
    case .p21(let suffix, let parameters):                                return "p21\(suffix)\(parameters)"
    case .p2pOverlay(let suffix, let parameters):                         return "p2p-overlay\(suffix)\(parameters)"
    case .parityfec(let suffix, let parameters):                          return "parityfec\(suffix)\(parameters)"
    case .passport(let suffix, let parameters):                           return "passport\(suffix)\(parameters)"
    case .patchOpsError(let suffix, let parameters):                      return "patch-ops-error\(suffix)\(parameters)"
    case .pdf(let suffix, let parameters):                                return "pdf\(suffix)\(parameters)"
    case .PDX(let suffix, let parameters):                                return "PDX\(suffix)\(parameters)"
    case .pemCertificateChain(let suffix, let parameters):                return "pem-certificate-chain\(suffix)\(parameters)"
    case .pgpEncrypted(let suffix, let parameters):                       return "pgp-encrypted\(suffix)\(parameters)"
    case .pgpKeys(let suffix, let parameters):                            return "pgp-keys\(suffix)\(parameters)"
    case .pgpSignature(let suffix, let parameters):                       return "pgp-signature\(suffix)\(parameters)"
    case .pidfDiff(let suffix, let parameters):                           return "pidf-diff\(suffix)\(parameters)"
    case .pidf(let suffix, let parameters):                               return "pidf\(suffix)\(parameters)"
    case .pkcs10(let suffix, let parameters):                             return "pkcs10\(suffix)\(parameters)"
    case .pkcs7Mime(let suffix, let parameters):                          return "pkcs7-mime\(suffix)\(parameters)"
    case .pkcs7Signature(let suffix, let parameters):                     return "pkcs7-signature\(suffix)\(parameters)"
    case .pkcs8(let suffix, let parameters):                              return "pkcs8\(suffix)\(parameters)"
    case .pkcs8Encrypted(let suffix, let parameters):                     return "pkcs8-encrypted\(suffix)\(parameters)"
    case .pkcs12(let suffix, let parameters):                             return "pkcs12\(suffix)\(parameters)"
    case .pkixAttrCert(let suffix, let parameters):                       return "pkix-attr-cert\(suffix)\(parameters)"
    case .pkixCert(let suffix, let parameters):                           return "pkix-cert\(suffix)\(parameters)"
    case .pkixCrl(let suffix, let parameters):                            return "pkix-crl\(suffix)\(parameters)"
    case .pkixPkipath(let suffix, let parameters):                        return "pkix-pkipath\(suffix)\(parameters)"
    case .pkixcmp(let suffix, let parameters):                            return "pkixcmp\(suffix)\(parameters)"
    case .pls(let suffix, let parameters):                                return "pls\(suffix)\(parameters)"
    case .pocSettings(let suffix, let parameters):                        return "poc-settings\(suffix)\(parameters)"
    case .postscript(let suffix, let parameters):                         return "postscript\(suffix)\(parameters)"
    case .ppspTracker(let suffix, let parameters):                        return "ppsp-tracker\(suffix)\(parameters)"
    case .problem(let suffix, let parameters):                            return "problem\(suffix)\(parameters)"
    case .provenance(let suffix, let parameters):                         return "provenance\(suffix)\(parameters)"
    case .pskc(let suffix, let parameters):                               return "pskc\(suffix)\(parameters)"
    case .pvd(let suffix, let parameters):                                return "pvd\(suffix)\(parameters)"
    case .rdf(let suffix, let parameters):                                return "rdf\(suffix)\(parameters)"
    case .routeApd(let suffix, let parameters):                           return "route-apd\(suffix)\(parameters)"
    case .routeSTsid(let suffix, let parameters):                         return "route-s-tsid\(suffix)\(parameters)"
    case .routeUsd(let suffix, let parameters):                           return "route-usd\(suffix)\(parameters)"
    case .QSIG(let suffix, let parameters):                               return "QSIG\(suffix)\(parameters)"
    case .raptorfec(let suffix, let parameters):                          return "raptorfec\(suffix)\(parameters)"
    case .rdap(let suffix, let parameters):                               return "rdap\(suffix)\(parameters)"
    case .reginfo(let suffix, let parameters):                            return "reginfo\(suffix)\(parameters)"
    case .relaxNgCompactSyntax(let suffix, let parameters):               return "relax-ng-compact-syntax\(suffix)\(parameters)"
    case .remotePrinting(let suffix, let parameters):                     return "remote-printing\(suffix)\(parameters)"
    case .reputon(let suffix, let parameters):                            return "reputon\(suffix)\(parameters)"
    case .resourceListsDiff(let suffix, let parameters):                  return "resource-lists-diff\(suffix)\(parameters)"
    case .resourceLists(let suffix, let parameters):                      return "resource-lists\(suffix)\(parameters)"
    case .rfc(let suffix, let parameters):                                return "rfc\(suffix)\(parameters)"
    case .riscos(let suffix, let parameters):                             return "riscos\(suffix)\(parameters)"
    case .rlmi(let suffix, let parameters):                               return "rlmi\(suffix)\(parameters)"
    case .rlsServices(let suffix, let parameters):                        return "rls-services\(suffix)\(parameters)"
    case .rpkiGhostbusters(let suffix, let parameters):                   return "rpki-ghostbusters\(suffix)\(parameters)"
    case .rpkiManifest(let suffix, let parameters):                       return "rpki-manifest\(suffix)\(parameters)"
    case .rpkiPublication(let suffix, let parameters):                    return "rpki-publication\(suffix)\(parameters)"
    case .rpkiRoa(let suffix, let parameters):                            return "rpki-roa\(suffix)\(parameters)"
    case .rpkiUpdown(let suffix, let parameters):                         return "rpki-updown\(suffix)\(parameters)"
    case .rtf(let suffix, let parameters):                                return "rtf\(suffix)\(parameters)"
    case .rtploopback(let suffix, let parameters):                        return "rtploopback\(suffix)\(parameters)"
    case .rtx(let suffix, let parameters):                                return "rtx\(suffix)\(parameters)"
    case .samlassertion(let suffix, let parameters):                      return "samlassertion\(suffix)\(parameters)"
    case .samlmetadata(let suffix, let parameters):                       return "samlmetadata\(suffix)\(parameters)"
    case .sarifExternalProperties(let suffix, let parameters):            return "sarif-external-properties\(suffix)\(parameters)"
    case .sarif(let suffix, let parameters):                              return "sarif\(suffix)\(parameters)"
    case .sbe(let suffix, let parameters):                                return "sbe\(suffix)\(parameters)"
    case .sbml(let suffix, let parameters):                               return "sbml\(suffix)\(parameters)"
    case .scaip(let suffix, let parameters):                              return "scaip\(suffix)\(parameters)"
    case .scim(let suffix, let parameters):                               return "scim\(suffix)\(parameters)"
    case .scvpCvRequest(let suffix, let parameters):                      return "scvp-cv-request\(suffix)\(parameters)"
    case .scvpCvResponse(let suffix, let parameters):                     return "scvp-cv-response\(suffix)\(parameters)"
    case .scvpVpRequest(let suffix, let parameters):                      return "scvp-vp-request\(suffix)\(parameters)"
    case .scvpVpResponse(let suffix, let parameters):                     return "scvp-vp-response\(suffix)\(parameters)"
    case .sdp(let suffix, let parameters):                                return "sdp\(suffix)\(parameters)"
    case .secevent(let suffix, let parameters):                           return "secevent\(suffix)\(parameters)"
    case .senmlEtch(let suffix, let parameters):                          return "senml-etch\(suffix)\(parameters)"
    case .senmlExi(let suffix, let parameters):                           return "senml-exi\(suffix)\(parameters)"
    case .senml(let suffix, let parameters):                              return "senml\(suffix)\(parameters)"
    case .sensmlExi(let suffix, let parameters):                          return "sensml-exi\(suffix)\(parameters)"
    case .sensml(let suffix, let parameters):                             return "sensml\(suffix)\(parameters)"
    case .sepExi(let suffix, let parameters):                             return "sep-exi\(suffix)\(parameters)"
    case .sep(let suffix, let parameters):                                return "sep\(suffix)\(parameters)"
    case .sessionInfo(let suffix, let parameters):                        return "session-info\(suffix)\(parameters)"
    case .setPayment(let suffix, let parameters):                         return "set-payment\(suffix)\(parameters)"
    case .setPaymentInitiation(let suffix, let parameters):               return "set-payment-initiation\(suffix)\(parameters)"
    case .setRegistration(let suffix, let parameters):                    return "set-registration\(suffix)\(parameters)"
    case .setRegistrationInitiation(let suffix, let parameters):          return "set-registration-initiation\(suffix)\(parameters)"
    case .SGML(let suffix, let parameters):                               return "SGML\(suffix)\(parameters)"
    case .sgmlOpenCatalog(let suffix, let parameters):                    return "sgml-open-catalog\(suffix)\(parameters)"
    case .shf(let suffix, let parameters):                                return "shf\(suffix)\(parameters)"
    case .sieve(let suffix, let parameters):                              return "sieve\(suffix)\(parameters)"
    case .simpleFilter(let suffix, let parameters):                       return "simple-filter\(suffix)\(parameters)"
    case .simpleMessageSummary(let suffix, let parameters):               return "simple-message-summary\(suffix)\(parameters)"
    case .simpleSymbolContainer(let suffix, let parameters):              return "simpleSymbolContainer\(suffix)\(parameters)"
    case .sipc(let suffix, let parameters):                               return "sipc\(suffix)\(parameters)"
    case .slate(let suffix, let parameters):                              return "slate\(suffix)\(parameters)"
    case .smil(let suffix, let parameters):                               return "smil\(suffix)\(parameters)"
    case .smpte336m(let suffix, let parameters):                          return "smpte336m\(suffix)\(parameters)"
    case .soap(let suffix, let parameters):                               return "soap\(suffix)\(parameters)"
    case .sparqlQuery(let suffix, let parameters):                        return "sparql-query\(suffix)\(parameters)"
    case .sparqlResults(let suffix, let parameters):                      return "sparql-results\(suffix)\(parameters)"
    case .spiritsEvent(let suffix, let parameters):                       return "spirits-event\(suffix)\(parameters)"
    case .sql(let suffix, let parameters):                                return "sql\(suffix)\(parameters)"
    case .srgs(let suffix, let parameters):                               return "srgs\(suffix)\(parameters)"
    case .sru(let suffix, let parameters):                                return "sru\(suffix)\(parameters)"
    case .ssml(let suffix, let parameters):                               return "ssml\(suffix)\(parameters)"
    case .stix(let suffix, let parameters):                               return "stix\(suffix)\(parameters)"
    case .swid(let suffix, let parameters):                               return "swid\(suffix)\(parameters)"
    case .tampApexUpdate(let suffix, let parameters):                     return "tamp-apex-update\(suffix)\(parameters)"
    case .tampApexUpdateConfirm(let suffix, let parameters):              return "tamp-apex-update-confirm\(suffix)\(parameters)"
    case .tampCommunityUpdate(let suffix, let parameters):                return "tamp-community-update\(suffix)\(parameters)"
    case .tampCommunityUpdateConfirm(let suffix, let parameters):         return "tamp-community-update-confirm\(suffix)\(parameters)"
    case .tampError(let suffix, let parameters):                          return "tamp-error\(suffix)\(parameters)"
    case .tampSequenceAdjust(let suffix, let parameters):                 return "tamp-sequence-adjust\(suffix)\(parameters)"
    case .tampSequenceAdjustConfirm(let suffix, let parameters):          return "tamp-sequence-adjust-confirm\(suffix)\(parameters)"
    case .tampStatusQuery(let suffix, let parameters):                    return "tamp-status-query\(suffix)\(parameters)"
    case .tampStatusResponse(let suffix, let parameters):                 return "tamp-status-response\(suffix)\(parameters)"
    case .tampUpdate(let suffix, let parameters):                         return "tamp-update\(suffix)\(parameters)"
    case .tampUpdateConfirm(let suffix, let parameters):                  return "tamp-update-confirm\(suffix)\(parameters)"
    case .taxii(let suffix, let parameters):                              return "taxii\(suffix)\(parameters)"
    case .td(let suffix, let parameters):                                 return "td\(suffix)\(parameters)"
    case .tei(let suffix, let parameters):                                return "tei\(suffix)\(parameters)"
    case .TETRA_ISI(let suffix, let parameters):                          return "TETRA_ISI\(suffix)\(parameters)"
    case .thraud(let suffix, let parameters):                             return "thraud\(suffix)\(parameters)"
    case .timestampQuery(let suffix, let parameters):                     return "timestamp-query\(suffix)\(parameters)"
    case .timestampReply(let suffix, let parameters):                     return "timestamp-reply\(suffix)\(parameters)"
    case .timestampedData(let suffix, let parameters):                    return "timestamped-data\(suffix)\(parameters)"
    case .tlsrpt(let suffix, let parameters):                             return "tlsrpt\(suffix)\(parameters)"
    case .tnauthlist(let suffix, let parameters):                         return "tnauthlist\(suffix)\(parameters)"
    case .tokenIntrospection(let suffix, let parameters):                 return "token-introspection\(suffix)\(parameters)"
    case .trickleIceSdpfrag(let suffix, let parameters):                  return "trickle-ice-sdpfrag\(suffix)\(parameters)"
    case .trig(let suffix, let parameters):                               return "trig\(suffix)\(parameters)"
    case .ttml(let suffix, let parameters):                               return "ttml\(suffix)\(parameters)"
    case .tveTrigger(let suffix, let parameters):                         return "tve-trigger\(suffix)\(parameters)"
    case .tzif(let suffix, let parameters):                               return "tzif\(suffix)\(parameters)"
    case .tzifLeap(let suffix, let parameters):                           return "tzif-leap\(suffix)\(parameters)"
    case .ulpfec(let suffix, let parameters):                             return "ulpfec\(suffix)\(parameters)"
    case .urcGrpsheet(let suffix, let parameters):                        return "urc-grpsheet\(suffix)\(parameters)"
    case .urcRessheet(let suffix, let parameters):                        return "urc-ressheet\(suffix)\(parameters)"
    case .urcTargetdesc(let suffix, let parameters):                      return "urc-targetdesc\(suffix)\(parameters)"
    case .urcUisocketdesc(let suffix, let parameters):                    return "urc-uisocketdesc\(suffix)\(parameters)"
    case .vcard(let suffix, let parameters):                              return "vcard\(suffix)\(parameters)"
    case .vemmi(let suffix, let parameters):                              return "vemmi\(suffix)\(parameters)"
    case .voicexml(let suffix, let parameters):                           return "voicexml\(suffix)\(parameters)"
    case .voucherCms(let suffix, let parameters):                         return "voucher-cms\(suffix)\(parameters)"
    case .vqRtcpxr(let suffix, let parameters):                           return "vq-rtcpxr\(suffix)\(parameters)"
    case .wasm(let suffix, let parameters):                               return "wasm\(suffix)\(parameters)"
    case .watcherinfo(let suffix, let parameters):                        return "watcherinfo\(suffix)\(parameters)"
    case .webpushOptions(let suffix, let parameters):                     return "webpush-options\(suffix)\(parameters)"
    case .whoisppQuery(let suffix, let parameters):                       return "whoispp-query\(suffix)\(parameters)"
    case .whoisppResponse(let suffix, let parameters):                    return "whoispp-response\(suffix)\(parameters)"
    case .widget(let suffix, let parameters):                             return "widget\(suffix)\(parameters)"
    case .wita(let suffix, let parameters):                               return "wita\(suffix)\(parameters)"
    case .wsdl(let suffix, let parameters):                               return "wsdl\(suffix)\(parameters)"
    case .wspolicy(let suffix, let parameters):                           return "wspolicy\(suffix)\(parameters)"
    case .xPkiMessage(let suffix, let parameters):                        return "x-pki-message\(suffix)\(parameters)"
    case .xWwwFormUrlencoded(let suffix, let parameters):                 return "x-www-form-urlencoded\(suffix)\(parameters)"
    case .xX509CaCert(let suffix, let parameters):                        return "x-x509-ca-cert\(suffix)\(parameters)"
    case .xX509CaRaCert(let suffix, let parameters):                      return "x-x509-ca-ra-cert\(suffix)\(parameters)"
    case .xX509NextCaCert(let suffix, let parameters):                    return "x-x509-next-ca-cert\(suffix)\(parameters)"
    case .x400Bp(let suffix, let parameters):                             return "x400-bp\(suffix)\(parameters)"
    case .xacml(let suffix, let parameters):                              return "xacml\(suffix)\(parameters)"
    case .xcapAtt(let suffix, let parameters):                            return "xcap-att\(suffix)\(parameters)"
    case .xcapCaps(let suffix, let parameters):                           return "xcap-caps\(suffix)\(parameters)"
    case .xcapDiff(let suffix, let parameters):                           return "xcap-diff\(suffix)\(parameters)"
    case .xcapEl(let suffix, let parameters):                             return "xcap-el\(suffix)\(parameters)"
    case .xcapError(let suffix, let parameters):                          return "xcap-error\(suffix)\(parameters)"
    case .xcapNs(let suffix, let parameters):                             return "xcap-ns\(suffix)\(parameters)"
    case .xconConferenceInfoDiff(let suffix, let parameters):             return "xcon-conference-info-diff\(suffix)\(parameters)"
    case .xconConferenceInfo(let suffix, let parameters):                 return "xcon-conference-info\(suffix)\(parameters)"
    case .xenc(let suffix, let parameters):                               return "xenc\(suffix)\(parameters)"
    case .xhtml(let suffix, let parameters):                              return "xhtml\(suffix)\(parameters)"
    case .xliff(let suffix, let parameters):                              return "xliff\(suffix)\(parameters)"
    case .xml(let suffix, let parameters):                                return "xml\(suffix)\(parameters)"
    case .xmlDtd(let suffix, let parameters):                             return "xml-dtd\(suffix)\(parameters)"
    case .xmlExternalParsedEntity(let suffix, let parameters):            return "xml-external-parsed-entity\(suffix)\(parameters)"
    case .xmlPatch(let suffix, let parameters):                           return "xml-patch\(suffix)\(parameters)"
    case .xmpp(let suffix, let parameters):                               return "xmpp\(suffix)\(parameters)"
    case .xop(let suffix, let parameters):                                return "xop\(suffix)\(parameters)"
    case .xslt(let suffix, let parameters):                               return "xslt\(suffix)\(parameters)"
    case .xv(let suffix, let parameters):                                 return "xv\(suffix)\(parameters)"
    case .yang(let suffix, let parameters):                               return "yang\(suffix)\(parameters)"
    case .yangData(let suffix, let parameters):                           return "yang-data\(suffix)\(parameters)"
    case .yangPatch(let suffix, let parameters):                          return "yang-patch\(suffix)\(parameters)"
    case .yin(let suffix, let parameters):                                return "yin\(suffix)\(parameters)"
    case .zip(let suffix, let parameters):                                return "zip\(suffix)\(parameters)"
    case .zlib(let suffix, let parameters):                               return "zlib\(suffix)\(parameters)"
    case .zstd(let suffix, let parameters):                               return "zstd\(suffix)\(parameters)"
    case .other(let value, let suffix, let parameters):                   return "\(value)\(suffix)\(parameters)"
    case .anything(let suffix, let parameters):                           return "*\(suffix)\(parameters)"
    }
  }
}

extension Application: MediaSubtype { public var type: MediaType { .application(self) } }
